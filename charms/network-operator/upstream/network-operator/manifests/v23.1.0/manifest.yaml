---
# Source: crds/k8s.cni.cncf.io_networkattachmentdefinitions_crd.yaml
# Copyright 2020 NVIDIA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: network-attachment-definitions.k8s.cni.cncf.io
spec:
  group: k8s.cni.cncf.io
  scope: Namespaced
  names:
    plural: network-attachment-definitions
    singular: network-attachment-definition
    kind: NetworkAttachmentDefinition
    shortNames:
    - net-attach-def
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: 'NetworkAttachmentDefinition is a CRD schema specified by the Network Plumbing
            Working Group to express the intent for attaching pods to one or more logical or physical
            networks. More information available at: https://github.com/k8snetworkplumbingwg/multi-net-spec'
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this represen
                tation of an object. Servers should convert recognized schemas to the
                latest internal value, and may reject unrecognized values. More info:
                https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: 'NetworkAttachmentDefinition spec defines the desired state of a network attachment'
              type: object
              properties:
                config:
                  description: 'NetworkAttachmentDefinition config is a JSON-formatted CNI configuration'
                  type: string

---
# Source: crds/mellanox.com_hostdevicenetworks.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: hostdevicenetworks.mellanox.com
spec:
  group: mellanox.com
  names:
    kind: HostDeviceNetwork
    listKind: HostDeviceNetworkList
    plural: hostdevicenetworks
    singular: hostdevicenetwork
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HostDeviceNetwork is the Schema for the hostdevicenetworks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HostDeviceNetworkSpec defines the desired state of HostDeviceNetwork
            properties:
              ipam:
                description: IPAM configuration to be used for this network
                type: string
              networkNamespace:
                description: Namespace of the NetworkAttachmentDefinition custom resource
                type: string
              resourceName:
                description: Host device resource pool name
                type: string
            type: object
          status:
            description: HostDeviceNetworkStatus defines the observed state of HostDeviceNetwork
            properties:
              appliedStates:
                description: AppliedStates provide a finer view of the observed state
                items:
                  description: AppliedState defines a finer-grained view of the observed
                    state of NicClusterPolicy
                  properties:
                    name:
                      type: string
                    state:
                      description: Represents reconcile state of the system
                      enum:
                      - ready
                      - notReady
                      - ignore
                      - error
                      type: string
                  required:
                  - name
                  - state
                  type: object
                type: array
              hostDeviceNetworkAttachmentDef:
                description: Network attachment definition generated from HostDeviceNetworkSpec
                type: string
              reason:
                description: Informative string in case the observed state is error
                type: string
              state:
                description: Reflects the state of the HostDeviceNetwork
                enum:
                - notReady
                - ready
                - error
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/mellanox.com_ipoibnetworks.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: ipoibnetworks.mellanox.com
spec:
  group: mellanox.com
  names:
    kind: IPoIBNetwork
    listKind: IPoIBNetworkList
    plural: ipoibnetworks
    singular: ipoibnetwork
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IPoIBNetwork is the Schema for the ipoibnetworks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IPoIBNetworkSpec defines the desired state of IPoIBNetwork
            properties:
              ipam:
                description: IPAM configuration to be used for this network.
                type: string
              master:
                description: Name of the host interface to enslave. Defaults to default
                  route interface
                type: string
              networkNamespace:
                description: Namespace of the NetworkAttachmentDefinition custom resource
                type: string
            type: object
          status:
            description: IPoIBNetworkStatus defines the observed state of IPoIBNetwork
            properties:
              ipoibNetworkAttachmentDef:
                description: Network attachment definition generated from IPoIBNetworkSpec
                type: string
              reason:
                description: Informative string in case the observed state is error
                type: string
              state:
                description: Reflects the state of the IPoIBNetwork
                enum:
                - notReady
                - ready
                - error
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/mellanox.com_macvlannetworks.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: macvlannetworks.mellanox.com
spec:
  group: mellanox.com
  names:
    kind: MacvlanNetwork
    listKind: MacvlanNetworkList
    plural: macvlannetworks
    singular: macvlannetwork
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MacvlanNetwork is the Schema for the macvlannetworks API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MacvlanNetworkSpec defines the desired state of MacvlanNetwork
            properties:
              ipam:
                description: IPAM configuration to be used for this network.
                type: string
              master:
                description: Name of the host interface to enslave. Defaults to default
                  route interface
                type: string
              mode:
                description: Mode of interface one of "bridge", "private", "vepa",
                  "passthru"
                enum:
                - bridge
                - private
                - vepa
                - passthru
                type: string
              mtu:
                description: MTU of interface to the specified value. 0 for master's
                  MTU
                minimum: 0
                type: integer
              networkNamespace:
                description: Namespace of the NetworkAttachmentDefinition custom resource
                type: string
            type: object
          status:
            description: MacvlanNetworkStatus defines the observed state of MacvlanNetwork
            properties:
              macvlanNetworkAttachmentDef:
                description: Network attachment definition generated from MacvlanNetworkSpec
                type: string
              reason:
                description: Informative string in case the observed state is error
                type: string
              state:
                description: Reflects the state of the MacvlanNetwork
                enum:
                - notReady
                - ready
                - error
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: crds/mellanox.com_nicclusterpolicies.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: nicclusterpolicies.mellanox.com
spec:
  group: mellanox.com
  names:
    kind: NicClusterPolicy
    listKind: NicClusterPolicyList
    plural: nicclusterpolicies
    singular: nicclusterpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NicClusterPolicy is the Schema for the nicclusterpolicies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NicClusterPolicySpec defines the desired state of NicClusterPolicy
            properties:
              ibKubernetes:
                description: IBKubernetesSpec describes configuration options for
                  ib-kubernetes
                properties:
                  image:
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullSecrets:
                    items:
                      type: string
                    type: array
                  pKeyGUIDPoolRangeEnd:
                    description: The last guid in the pool
                    type: string
                  pKeyGUIDPoolRangeStart:
                    description: The first guid in the pool
                    type: string
                  periodicUpdateSeconds:
                    default: 5
                    description: Interval of updates in seconds
                    minimum: 0
                    type: integer
                  repository:
                    pattern: '[a-zA-Z0-9\.\-\/]+'
                    type: string
                  ufmSecret:
                    description: Secret containing credentials to UFM service
                    type: string
                  version:
                    pattern: '[a-zA-Z0-9\.-]+'
                    type: string
                required:
                - image
                - repository
                - version
                type: object
              nodeAffinity:
                description: Node affinity is a group of node affinity scheduling
                  rules.
                properties:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    description: The scheduler will prefer to schedule pods to nodes
                      that satisfy the affinity expressions specified by this field,
                      but it may choose a node that violates one or more of the expressions.
                      The node that is most preferred is the one with the greatest
                      sum of weights, i.e. for each node that meets all of the scheduling
                      requirements (resource request, requiredDuringScheduling affinity
                      expressions, etc.), compute a sum by iterating through the elements
                      of this field and adding "weight" to the sum if the node matches
                      the corresponding matchExpressions; the node(s) with the highest
                      sum are the most preferred.
                    items:
                      description: An empty preferred scheduling term matches all
                        objects with implicit weight 0 (i.e. it's a no-op). A null
                        preferred scheduling term matches no objects (i.e. is also
                        a no-op).
                      properties:
                        preference:
                          description: A node selector term, associated with the corresponding
                            weight.
                          properties:
                            matchExpressions:
                              description: A list of node selector requirements by
                                node's labels.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchFields:
                              description: A list of node selector requirements by
                                node's fields.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                          type: object
                          x-kubernetes-map-type: atomic
                        weight:
                          description: Weight associated with matching the corresponding
                            nodeSelectorTerm, in the range 1-100.
                          format: int32
                          type: integer
                      required:
                      - preference
                      - weight
                      type: object
                    type: array
                  requiredDuringSchedulingIgnoredDuringExecution:
                    description: If the affinity requirements specified by this field
                      are not met at scheduling time, the pod will not be scheduled
                      onto the node. If the affinity requirements specified by this
                      field cease to be met at some point during pod execution (e.g.
                      due to an update), the system may or may not try to eventually
                      evict the pod from its node.
                    properties:
                      nodeSelectorTerms:
                        description: Required. A list of node selector terms. The
                          terms are ORed.
                        items:
                          description: A null or empty node selector term matches
                            no objects. The requirements of them are ANDed. The TopologySelectorTerm
                            type implements a subset of the NodeSelectorTerm.
                          properties:
                            matchExpressions:
                              description: A list of node selector requirements by
                                node's labels.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchFields:
                              description: A list of node selector requirements by
                                node's fields.
                              items:
                                description: A node selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: The label key that the selector applies
                                      to.
                                    type: string
                                  operator:
                                    description: Represents a key's relationship to
                                      a set of values. Valid operators are In, NotIn,
                                      Exists, DoesNotExist. Gt, and Lt.
                                    type: string
                                  values:
                                    description: An array of string values. If the
                                      operator is In or NotIn, the values array must
                                      be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. If the operator
                                      is Gt or Lt, the values array must have a single
                                      element, which will be interpreted as an integer.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                    required:
                    - nodeSelectorTerms
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              nvPeerDriver:
                description: NVPeerDriverSpec describes configuration options for
                  NV Peer Memory driver
                properties:
                  gpuDriverSourcePath:
                    description: GPU driver sources path - Optional
                    type: string
                  image:
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullSecrets:
                    items:
                      type: string
                    type: array
                  repository:
                    pattern: '[a-zA-Z0-9\.\-\/]+'
                    type: string
                  version:
                    pattern: '[a-zA-Z0-9\.-]+'
                    type: string
                required:
                - image
                - repository
                - version
                type: object
              ofedDriver:
                description: OFEDDriverSpec describes configuration options for OFED
                  driver
                properties:
                  certConfig:
                    description: 'Optional: Custom TLS certificates configuration
                      for driver container'
                    properties:
                      name:
                        type: string
                    type: object
                  env:
                    description: List of environment variables to set in the OFED
                      container.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullSecrets:
                    items:
                      type: string
                    type: array
                  livenessProbe:
                    description: Pod liveness probe settings
                    properties:
                      initialDelaySeconds:
                        type: integer
                      periodSeconds:
                        type: integer
                    required:
                    - initialDelaySeconds
                    - periodSeconds
                    type: object
                  readinessProbe:
                    description: Pod readiness probe settings
                    properties:
                      initialDelaySeconds:
                        type: integer
                      periodSeconds:
                        type: integer
                    required:
                    - initialDelaySeconds
                    - periodSeconds
                    type: object
                  repoConfig:
                    description: 'Optional: Custom package repository configuration
                      for OFED container'
                    properties:
                      name:
                        type: string
                    type: object
                  repository:
                    pattern: '[a-zA-Z0-9\.\-\/]+'
                    type: string
                  startupProbe:
                    description: Pod startup probe settings
                    properties:
                      initialDelaySeconds:
                        type: integer
                      periodSeconds:
                        type: integer
                    required:
                    - initialDelaySeconds
                    - periodSeconds
                    type: object
                  terminationGracePeriodSeconds:
                    default: 300
                    description: TerminationGracePeriodSeconds specifies the length
                      of time in seconds to wait before killing the OFED pod on termination
                    format: int64
                    minimum: 0
                    type: integer
                  upgradePolicy:
                    description: Ofed auto-upgrade settings
                    properties:
                      autoUpgrade:
                        default: false
                        description: AutoUpgrade is a global switch for automatic
                          upgrade feature if set to false all other options are ignored
                        type: boolean
                      drain:
                        description: DrainSpec describes configuration for node drain
                          during automatic upgrade
                        properties:
                          deleteEmptyDir:
                            default: false
                            description: DeleteEmptyDir indicates if should continue
                              even if there are pods using emptyDir (local data that
                              will be deleted when the node is drained)
                            type: boolean
                          enable:
                            default: true
                            description: Enable indicates if node draining is allowed
                              during upgrade
                            type: boolean
                          force:
                            default: false
                            description: Force indicates if force draining is allowed
                            type: boolean
                          podSelector:
                            description: 'PodSelector specifies a label selector to
                              filter pods on the node that need to be drained For
                              more details on label selectors, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
                            type: string
                          timeoutSeconds:
                            default: 300
                            description: TimeoutSecond specifies the length of time
                              in seconds to wait before giving up drain, zero means
                              infinite
                            minimum: 0
                            type: integer
                        type: object
                      maxParallelUpgrades:
                        default: 1
                        description: MaxParallelUpgrades indicates how many nodes
                          can be upgraded in parallel 0 means no limit, all nodes
                          will be upgraded in parallel
                        minimum: 0
                        type: integer
                    type: object
                  version:
                    pattern: '[a-zA-Z0-9\.-]+'
                    type: string
                required:
                - image
                - repository
                - version
                type: object
              psp:
                description: PSPSpec describes configuration for PodSecurityPolicies
                  to apply for all Pods
                properties:
                  enabled:
                    default: false
                    description: Enabled indicates if PodSecurityPolicies needs to
                      be enabled for all Pods
                    type: boolean
                type: object
              rdmaSharedDevicePlugin:
                description: DevicePluginSpec describes configuration options for
                  device plugin
                properties:
                  config:
                    description: Device plugin configuration
                    type: string
                  image:
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullSecrets:
                    items:
                      type: string
                    type: array
                  repository:
                    pattern: '[a-zA-Z0-9\.\-\/]+'
                    type: string
                  version:
                    pattern: '[a-zA-Z0-9\.-]+'
                    type: string
                required:
                - config
                - image
                - repository
                - version
                type: object
              secondaryNetwork:
                description: SecondaryNetwork describes configuration options for
                  secondary network
                properties:
                  cniPlugins:
                    description: Image information for CNI plugins
                    properties:
                      image:
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullSecrets:
                        items:
                          type: string
                        type: array
                      repository:
                        pattern: '[a-zA-Z0-9\.\-\/]+'
                        type: string
                      version:
                        pattern: '[a-zA-Z0-9\.-]+'
                        type: string
                    required:
                    - image
                    - repository
                    - version
                    type: object
                  ipamPlugin:
                    description: Image information for IPAM plugin
                    properties:
                      image:
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullSecrets:
                        items:
                          type: string
                        type: array
                      repository:
                        pattern: '[a-zA-Z0-9\.\-\/]+'
                        type: string
                      version:
                        pattern: '[a-zA-Z0-9\.-]+'
                        type: string
                    required:
                    - image
                    - repository
                    - version
                    type: object
                  ipoib:
                    description: Image information for IPoIB CNI
                    properties:
                      image:
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullSecrets:
                        items:
                          type: string
                        type: array
                      repository:
                        pattern: '[a-zA-Z0-9\.\-\/]+'
                        type: string
                      version:
                        pattern: '[a-zA-Z0-9\.-]+'
                        type: string
                    required:
                    - image
                    - repository
                    - version
                    type: object
                  multus:
                    description: Image and configuration information for multus
                    properties:
                      config:
                        description: Multus CNI config if config is missing or empty
                          then multus config will be automatically generated from
                          the CNI configuration file of the master plugin (the first
                          file in lexicographical order in cni-conf-dir)
                        type: string
                      image:
                        pattern: '[a-zA-Z0-9\-]+'
                        type: string
                      imagePullSecrets:
                        items:
                          type: string
                        type: array
                      repository:
                        pattern: '[a-zA-Z0-9\.\-\/]+'
                        type: string
                      version:
                        pattern: '[a-zA-Z0-9\.-]+'
                        type: string
                    required:
                    - image
                    - repository
                    - version
                    type: object
                type: object
              sriovDevicePlugin:
                description: DevicePluginSpec describes configuration options for
                  device plugin
                properties:
                  config:
                    description: Device plugin configuration
                    type: string
                  image:
                    pattern: '[a-zA-Z0-9\-]+'
                    type: string
                  imagePullSecrets:
                    items:
                      type: string
                    type: array
                  repository:
                    pattern: '[a-zA-Z0-9\.\-\/]+'
                    type: string
                  version:
                    pattern: '[a-zA-Z0-9\.-]+'
                    type: string
                required:
                - config
                - image
                - repository
                - version
                type: object
            type: object
          status:
            description: NicClusterPolicyStatus defines the observed state of NicClusterPolicy
            properties:
              appliedStates:
                description: AppliedStates provide a finer view of the observed state
                items:
                  description: AppliedState defines a finer-grained view of the observed
                    state of NicClusterPolicy
                  properties:
                    name:
                      type: string
                    state:
                      description: Represents reconcile state of the system
                      enum:
                      - ready
                      - notReady
                      - ignore
                      - error
                      type: string
                  required:
                  - name
                  - state
                  type: object
                type: array
              reason:
                description: Informative string in case the observed state is error
                type: string
              state:
                description: Reflects the current state of the cluster policy
                enum:
                - ignore
                - notReady
                - ready
                - error
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: network-operator/charts/node-feature-discovery/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nvidia-charm-node-feature-discovery
  labels:
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/version: "v0.10.1"
---
# Source: network-operator/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nvidia-charm-network-operator
  namespace: default
---
# Source: network-operator/charts/node-feature-discovery/templates/nfd-worker-conf.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: nvidia-charm-node-feature-discovery-worker-conf
  labels:
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/version: "v0.10.1"
data:
  nfd-worker.conf: |-
    sources:
      pci:
        deviceClassWhitelist:
        - "02"
        - "0200"
        - "0207"
        deviceLabelFields:
        - vendor
---
# Source: network-operator/charts/node-feature-discovery/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nvidia-charm-node-feature-discovery
  labels:
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/version: "v0.10.1"
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  # when using command line flag --resource-labels to create extended resources
  # you will need to uncomment "- nodes/status"
  # - nodes/status
  verbs:
  - get
  - patch
  - update
  - list
- apiGroups:
  - nfd.k8s-sigs.io
  resources:
  - nodefeaturerules
  verbs:
  - get
  - list
  - watch
---
# Source: network-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: nvidia-charm-network-operator
rules:
  - apiGroups:
      - mellanox.com
    resources:
      - '*'
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - patch
      - watch
      - update
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - k8s.cni.cncf.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - clusterroles
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - escalate
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/status
      - configmaps
    verbs:
      - get
      - list
      - update
      - watch
      - patch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - whereabouts.cni.cncf.io
    resources:
      - ippools
      - overlappingrangeipreservations
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
    - security.openshift.io
    resources:
    - securitycontextconstraints
    verbs:
    - '*'
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - create
      - get
      - update
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - podsecuritypolicies
    verbs:
      - use
    resourceNames:
      - nvidia-network-operator-privileged
  - apiGroups:
      - config.openshift.io
    resources:
      - proxies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
# Source: network-operator/charts/node-feature-discovery/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nvidia-charm-node-feature-discovery
  labels:
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/version: "v0.10.1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nvidia-charm-node-feature-discovery
subjects:
- kind: ServiceAccount
  name: nvidia-charm-node-feature-discovery
  namespace: default
---
# Source: network-operator/templates/role_binding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nvidia-charm-network-operator
subjects:
  - kind: Group
    apiGroup: rbac.authorization.k8s.io
    name: system:serviceaccounts:default
roleRef:
  kind: ClusterRole
  name: nvidia-charm-network-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: network-operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: nvidia-charm-network-operator
  namespace: default
rules:
  - apiGroups:
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/status
      - services
      - serviceaccounts
      - services/finalizers
      - endpoints
      - persistentvolumeclaims
      - events
      - configmaps
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
  - apiGroups:
      - apps
    resourceNames:
      - network-operator
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - mellanox.com
    resources:
      - '*'
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - patch
      - watch
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
      - rolebindings
    verbs:
      - '*'
---
# Source: network-operator/templates/role_binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nvidia-charm-network-operator
  namespace: default
subjects:
  - kind: ServiceAccount
    name: nvidia-charm-network-operator
    namespace: default
roleRef:
  kind: Role
  name: nvidia-charm-network-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: network-operator/charts/node-feature-discovery/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nvidia-charm-node-feature-discovery-master
  labels:
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/version: "v0.10.1"
    role: master
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: node-feature-discovery
---
# Source: network-operator/charts/node-feature-discovery/templates/worker.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name:  nvidia-charm-node-feature-discovery-worker
  labels:
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/version: "v0.10.1"
    role: worker
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: node-feature-discovery
      role: worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-feature-discovery
        role: worker
      annotations:
        {}
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        {}
      containers:
      - name: worker
        securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
        image: "k8s.gcr.io/nfd/node-feature-discovery:v0.10.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
            {}
        command:
        - "nfd-worker"
        args:
        - "--server=nvidia-charm-node-feature-discovery-master:8080"
        volumeMounts:
        - name: host-boot
          mountPath: "/host-boot"
          readOnly: true
        - name: host-os-release
          mountPath: "/host-etc/os-release"
          readOnly: true
        - name: host-sys
          mountPath: "/host-sys"
          readOnly: true
        - name: host-usr-lib
          mountPath: "/host-usr/lib"
          readOnly: true
        - name: source-d
          mountPath: "/etc/kubernetes/node-feature-discovery/source.d/"
          readOnly: true
        - name: features-d
          mountPath: "/etc/kubernetes/node-feature-discovery/features.d/"
          readOnly: true
        - name: nfd-worker-conf
          mountPath: "/etc/kubernetes/node-feature-discovery"
          readOnly: true
      volumes:
        - name: host-boot
          hostPath:
            path: "/boot"
        - name: host-os-release
          hostPath:
            path: "/etc/os-release"
        - name: host-sys
          hostPath:
            path: "/sys"
        - name: host-usr-lib
          hostPath:
            path: "/usr/lib"
        - name: source-d
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/source.d/"
        - name: features-d
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/features.d/"
        - name: nfd-worker-conf
          configMap:
            name: nvidia-charm-node-feature-discovery-worker-conf
            items:
              - key: nfd-worker.conf
                path: nfd-worker.conf
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
          value: ""
        - effect: NoSchedule
          key: nvidia.com/gpu
          operator: Equal
          value: present
---
# Source: network-operator/charts/node-feature-discovery/templates/master.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  nvidia-charm-node-feature-discovery-master
  labels:
    app.kubernetes.io/name: node-feature-discovery
    app.kubernetes.io/version: "v0.10.1"
    role: master
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: node-feature-discovery
      role: master
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-feature-discovery
        role: master
      annotations:
        {}
    spec:
      serviceAccountName: nvidia-charm-node-feature-discovery
      securityContext:
        {}
      containers:
        - name: master
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          image: "k8s.gcr.io/nfd/node-feature-discovery:v0.10.1"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - "/usr/bin/grpc_health_probe"
              - "-addr=:8080"
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
              - "/usr/bin/grpc_health_probe"
              - "-addr=:8080"
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 10
          ports:
          - containerPort: 8080
            name: grpc
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          command:
            - "nfd-master"
          resources:
            {}
          args:
            - "--instance=nvidia.networking"
            ## By default, disable NodeFeatureRules controller for other than the default instances
            - "-featurerules-controller=false"
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
            weight: 1
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: In
                values:
                - ""
            weight: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
          value: ""
---
# Source: network-operator/templates/operator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nvidia-charm-network-operator
  labels:
    app.kubernetes.io/name: network-operator
    app.kubernetes.io/version: "v23.1.0"
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: network-operator
  template:
    metadata:
      labels:
        nvidia.com/ofed-upgrade.skip-drain: "true"
        app.kubernetes.io/name: network-operator
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - ""
            weight: 1
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: In
                values:
                - ""
            weight: 1
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: ""
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
          value: ""
      serviceAccountName: nvidia-charm-network-operator
      imagePullSecrets: 
      
      containers:
        - name: network-operator
          # Replace this with the built image name
          image: "nvcr.io/nvidia/cloud-native/network-operator:v23.1.0"
          command:
          - /manager
          imagePullPolicy: IfNotPresent
          env:
            - name: STATE_MANIFEST_BASE_DIR
              value: "/manifests"
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: OPERATOR_NAME
              value: "network-operator"
